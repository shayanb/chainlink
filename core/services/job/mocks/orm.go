// Code generated by mockery v2.1.0. DO NOT EDIT.

package mocks

import (
	job "github.com/smartcontractkit/chainlink/core/services/job"
	mock "github.com/stretchr/testify/mock"

	models "github.com/smartcontractkit/chainlink/core/store/models"
)

// ORM is an autogenerated mock type for the ORM type
type ORM struct {
	mock.Mock
}

// CreateJob provides a mock function with given fields: spec
func (_m *ORM) CreateJob(spec job.Spec) error {
	ret := _m.Called(spec)

	var r0 error
	if rf, ok := ret.Get(0).(func(job.Spec) error); ok {
		r0 = rf(spec)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteJob provides a mock function with given fields: spec
func (_m *ORM) DeleteJob(spec job.Spec) error {
	ret := _m.Called(spec)

	var r0 error
	if rf, ok := ret.Get(0).(func(job.Spec) error); ok {
		r0 = rf(spec)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UnclaimedJobs provides a mock function with given fields: jobTypeRegistrations, claimedJobs
func (_m *ORM) UnclaimedJobs(jobTypeRegistrations map[job.Type]job.Registration, claimedJobs map[models.ID][]job.Service) ([]job.Spec, error) {
	ret := _m.Called(jobTypeRegistrations, claimedJobs)

	var r0 []job.Spec
	if rf, ok := ret.Get(0).(func(map[job.Type]job.Registration, map[models.ID][]job.Service) []job.Spec); ok {
		r0 = rf(jobTypeRegistrations, claimedJobs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]job.Spec)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[job.Type]job.Registration, map[models.ID][]job.Service) error); ok {
		r1 = rf(jobTypeRegistrations, claimedJobs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
